import boto3
import time

# using boto3 client
rds = boto3.client('rds')

username = 'joeuser'
password = 'XXX'
db_subnet_group = 'vpc-joe-hol'
db_cluster_id = 'rds-joe-cluster'


# create the DB cluster
try:
    response= rds.describe_db_clusters(DBClusterIdentifier = db_cluster_id)
    print(f"The DB cluster named '{db_cluster_id}' already exists. Skipping creation.")
except rds.exceptions.DBClusterNotFoundFault:
    response = rds.create_db_cluster(
        Engine = 'aurora-mysql',
        EngineVersion = '5.7.mysql_aurora.2.08.3',
        DBClusterIdentifier= db_cluster_id,
        MasterUsername= username,
        MasterUserPassword = password,
        DatabaseName = 'rds_hol_db',
        DBSubnetGroupName= db_subnet_group,
        EngineMode = 'serverless',
        EnableHttpEndpoint = True,
        ScalingConfiguration= {
            'MinCapacity': 1,
            'MaxCapacity':8,
            'AutoPause':True,
            'SecondsUntilAutoPause': 300
        }
        
    )
    print(f"The DB cluster named '{db_cluster_id}' has been created")
    
    # wait for the DB cluster to become available
    while True:
        response = rds.describe_db_clusters(DBClusterIdentifier=db_cluster_id)
        status = response['DBClusters'][0]['Status']
        print(f"The Status of the cluster is '{status}'")
        if status == 'available':
            break
        
        print("Waiting for the DB cluster to become available... ")
        time.sleep(40)

## Modifying the DB cluster, update the scaling configuration for the cluster

# response = rds.modify_db_cluster(
#     DBClusterIdentifier= db_cluster_id,
#     ScalingConfiguration= {
#         'MinCapacity': 1,
#         'MaxCapacity':16,
#         'SecondsUntilAutoPause': 600
#         }
        
#     )
# print(f"Updated the scaling configuration for DB cluster '{db_cluster_id}'.")
        


# # Delete the DB cluster
# response = rds.delete_db_cluster(
#     DBClusterIdentifier= db_cluster_id,
#     SkipFinalSnapshot=True   
#     )
# print(f"The '{db_cluster_id}' is being deleted.")
        
